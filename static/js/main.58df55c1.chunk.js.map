{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Calendar","props","useReducer","newState","currentDate","moment","startOfMonth","endOfMonth","nextMonth","previousMonth","singleDay","dayFullFormat","days","style","flex","height","display","cursor","backgroundColor","state","justifyContent","alignItems","color","border","onClick","date","weekStart","daysRow","week","row","weekEnd","i","useEffect","setState","setTimeout","position","width","margin","zIndex","dayNames","padding","key","overflow","minWidth","transform","transition","left","right","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58df55c1.chunk.js","sourcesContent":["import moment from 'moment'\nimport React, { useReducer, useEffect } from 'react'\n\nexport const Calendar = (props) => {\n  const [state, setState] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      currentDate: moment(),\n      startOfMonth: moment(props.date).startOf('month').startOf('week'),\n      endOfMonth: moment(props.date).endOf('month').endOf('week'),\n      nextMonth: false,\n      previousMonth: false\n    }\n  )\n  const dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  const dayNameShort = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']\n\n  const singleDay = (dayFullFormat, days) => {\n    return (\n      <span\n        style={{\n          flex: 1,\n          height: '30px',\n          display: 'flex',\n          cursor: 'pointer',\n          backgroundColor:\n            moment(days).format('DDMMYYYY') ===\n            moment(props.selectedDate).format('DDMMYYYY')\n              ? '#ffeaec'\n              : moment(days).format('MMYYYY') ===\n                moment(state.currentDate).format('MMYYYY')\n              ? '#eceaff'\n              : '#ffffff',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color:\n            moment(days).format('DDMMYYYY') ===\n            moment(state.currentDate).format('DDMMYYYY')\n              ? '#ffa100'\n              : '#4a4a4a',\n          border:\n            moment(days).format('DDMMYYYY') ===\n            moment(props.selectedDate).format('DDMMYYYY')\n              ? '1px solid #ffa100'\n              : '1px solid #eceaff'\n        }}\n        onClick={() => {\n          props.setSelectedDate(moment(dayFullFormat))\n        }}\n      >\n        {moment(days).format('D')}\n      </span>\n    )\n  }\n  const days = (date) => {\n    let startOfMonth = moment(date).startOf('month').startOf('week')\n    let endOfMonth = moment(date).endOf('month').endOf('week')\n    let weekStart = moment(startOfMonth)\n    let daysRow = []\n    let week = []\n    while (weekStart < endOfMonth) {\n      let row = []\n      let weekEnd = moment(weekStart).endOf('week')\n      let days = moment(weekStart)\n      for (let i = 0; i < weekEnd.diff(weekStart, 'days') + 1; i++) {\n        let dayFullFormat = moment(days)\n        row.push(singleDay(dayFullFormat, days))\n        days.add(1, 'days')\n      }\n      week.push(<div style={{ display: 'flex' }}>{row}</div>)\n      weekStart.add(7, 'days')\n    }\n    daysRow.push(week)\n    week = []\n    return daysRow\n  }\n  useEffect(() => {\n    setState({\n      startOfMonth: moment(props.date).startOf('month').startOf('week'),\n      endOfMonth: moment(props.date).endOf('month').endOf('week')\n    })\n  }, [props.date])\n  useEffect(() => {\n    if (state.nextMonth) {\n      setTimeout(() => {\n        props.setDate(moment(props.date).startOf('month').add(1, 'month'))\n        setState({ nextMonth: false })\n      }, 500)\n    }\n  }, [state.nextMonth])\n  useEffect(() => {\n    if (state.previousMonth) {\n      setTimeout(() => {\n        props.setDate(moment(props.date).startOf('month').subtract(1, 'month'))\n        setState({ previousMonth: false })\n      }, 500)\n    }\n  }, [state.previousMonth])\n\n  return (\n    <div>\n      {/* style={{ width: \"100%\", margin: \"auto\" }}> */}\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            display: 'flex',\n            border: '2px solid #ececec',\n            width: '400px',\n            margin: 'auto',\n            zIndex: 1\n          }}\n        >\n          {dayNames.map((a, i) => (\n            <span\n              style={{\n                padding: '10px',\n                flex: 1,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: '#eaeaea'\n              }}\n              key={i}\n            >\n              {a}\n            </span>\n          ))}\n        </div>\n        <span\n          style={{\n            display: 'flex',\n            width: '400px',\n            justifyContent: 'center',\n            margin: 'auto',\n            overflow: 'hidden'\n          }}\n        >\n          <span\n            style={{\n              minWidth: '400px',\n              border: '2px solid #ececec',\n              backgroundColor: '#ffffff',\n              transform: state.previousMonth\n                ? 'translateX(100%)'\n                : 'translateX(0)',\n              transition: state.previousMonth ? 'transform 500ms' : 'none',\n\n              zIndex: state.previousMonth ? '2' : '0',\n              display: 'block',\n              // position: \"absolute\",\n              left: 0\n            }}\n          >\n            {' '}\n            {days(moment(props.date).startOf('month').subtract(1, 'month'))}\n          </span>\n          <span\n            style={{\n              minWidth: '400px',\n              border: '2px solid #ececec',\n              transform: state.previousMonth\n                ? 'translateX(100%)'\n                : state.nextMonth\n                ? 'translateX(-100%)'\n                : 'translateX(0)',\n              transition: state.previousMonth\n                ? 'transform 500ms'\n                : state.nextMonth\n                ? 'transform 500ms'\n                : 'none',\n              zIndex: '2',\n              zIndex: 1,\n              backgroundColor: '#ffffff',\n              display: 'block'\n            }}\n          >\n            {days(props.date)}\n          </span>\n          <span\n            style={{\n              minWidth: '400px',\n              border: '2px solid #ececec',\n\n              backgroundColor: '#ffffff',\n              transform: state.nextMonth\n                ? 'translateX(-100%)'\n                : 'translateX(0)',\n              transition: state.nextMonth ? 'transform 500ms' : 'none',\n              zIndex: state.nextMonth ? '2' : '0',\n              display: 'block',\n              // position: \"absolute\",\n              right: 0\n            }}\n          >\n            {days(moment(props.date).startOf('month').add(1, 'month'))}\n          </span>\n        </span>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            // props.setDate(\n            //   moment(props.date).startOf(\"month\").subtract(1, \"month\")\n            // );\n            setState({ previousMonth: true })\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          onClick={() => {\n            // props.setDate(moment(props.date).startOf(\"month\").add(1, \"month\"));\n            setState({ nextMonth: true })\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Calendar } from 'calendar-react'\nimport 'calendar-react/dist/index.css'\n\nconst App = () => {\n  return <Calendar />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}